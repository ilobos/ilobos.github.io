{"title":"Mybatis Plus逻辑删除时自动填充时间","uid":"5a84c1282747741be433f8b364c5c86f","slug":"java/001-mybatis-plus-sql-injector","date":"2022-04-02T05:20:13.000Z","updated":"2022-04-02T15:25:54.756Z","comments":true,"path":"api/articles/java/001-mybatis-plus-sql-injector.json","keywords":null,"cover":"https://images.pexels.com/photos/290470/pexels-photo-290470.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260","content":"<hr>\n<h5 id=\"1、背景\"><a href=\"#1、背景\" class=\"headerlink\" title=\"1、背景\"></a>1、背景</h5><p>开发规范里面要求有 delte_time 字段，但是baomidou的Mybatis plus里面没有这个字段；理论上也是不需要这个字段的，毕竟逻辑删除 与 update_time 配合起来就是 delte_time 的含义了；所以我们需要来研究一下 如何增加这个字段，并实现自动填充。</p>\n<h5 id=\"2、开发环境\"><a href=\"#2、开发环境\" class=\"headerlink\" title=\"2、开发环境\"></a>2、开发环境</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">java -version\njava version <span class=\"token string\">\"1.8.0_212\"</span>\nJava<span class=\"token punctuation\">(</span>TM<span class=\"token punctuation\">)</span> SE Runtime Environment <span class=\"token punctuation\">(</span>build <span class=\"token number\">1.8</span>.0_212-b10<span class=\"token punctuation\">)</span>\nJava HotSpot<span class=\"token punctuation\">(</span>TM<span class=\"token punctuation\">)</span> <span class=\"token number\">64</span>-Bit Server VM <span class=\"token punctuation\">(</span>build <span class=\"token number\">25.212</span>-b10, mixed mode<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>dependency<span class=\"token punctuation\">></span></span>\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">></span></span>com<span class=\"token punctuation\">.</span>baomidou<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">></span>\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">></span></span>mybatis<span class=\"token operator\">-</span>plus<span class=\"token operator\">-</span>boot<span class=\"token operator\">-</span>starter<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">></span>\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">></span></span><span class=\"token number\">3.2</span><span class=\"token number\">.0</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependency<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;parent&gt;\n    &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;\n    &lt;artifactId&gt;spring-boot-starter-parent&lt;&#x2F;artifactId&gt;\n    &lt;version&gt;2.6.6&lt;&#x2F;version&gt;\n    &lt;relativePath&#x2F;&gt;\n&lt;&#x2F;parent&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"3、通用字段\"><a href=\"#3、通用字段\" class=\"headerlink\" title=\"3、通用字段\"></a>3、通用字段</h5><p>1、SQL脚本：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">bigint</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token punctuation\">,</span>\n<span class=\"token identifier\"><span class=\"token punctuation\">`</span>create_time<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">timestamp</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'创建时间'</span><span class=\"token punctuation\">,</span>\n<span class=\"token identifier\"><span class=\"token punctuation\">`</span>update_time<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">timestamp</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'更新时间'</span><span class=\"token punctuation\">,</span>\n<span class=\"token identifier\"><span class=\"token punctuation\">`</span>delete_time<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">timestamp</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'删除时间'</span><span class=\"token punctuation\">,</span>\n<span class=\"token identifier\"><span class=\"token punctuation\">`</span>is_deleted<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">tinyint</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">'0'</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'逻辑删除标识位'</span><span class=\"token punctuation\">,</span>\n<span class=\"token identifier\"><span class=\"token punctuation\">`</span>version<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">'0'</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'版本号'</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>2、对应的BaseModel.java</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@TableId</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> type <span class=\"token operator\">=</span> <span class=\"token class-name\">IdType</span><span class=\"token punctuation\">.</span>AUTO<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">protected</span> <span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@TableField</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"create_time\"</span><span class=\"token punctuation\">,</span> fill <span class=\"token operator\">=</span> <span class=\"token class-name\">FieldFill</span><span class=\"token punctuation\">.</span>INSERT<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">protected</span> <span class=\"token class-name\">Date</span> createTime<span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@TableField</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"update_time\"</span><span class=\"token punctuation\">,</span> fill <span class=\"token operator\">=</span> <span class=\"token class-name\">FieldFill</span><span class=\"token punctuation\">.</span>UPDATE<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">protected</span> <span class=\"token class-name\">Date</span> updateTime<span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@TableField</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"delete_time\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">protected</span> <span class=\"token class-name\">Date</span> deleteTime<span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@TableLogic</span>\n<span class=\"token annotation punctuation\">@TableField</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"is_deleted\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">protected</span> <span class=\"token class-name\">Integer</span> isDeleted<span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@Version</span>\n<span class=\"token annotation punctuation\">@TableField</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"version\"</span><span class=\"token punctuation\">,</span> fill <span class=\"token operator\">=</span> <span class=\"token class-name\">FieldFill</span><span class=\"token punctuation\">.</span>UPDATE<span class=\"token punctuation\">,</span> update <span class=\"token operator\">=</span> <span class=\"token string\">\"%s+1\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">protected</span> <span class=\"token class-name\">Integer</span> version<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>@TableId：主键字段</p>\n<p>@Version：版本号字段</p>\n<p>@TableLogic：逻辑删除字段</p>\n<p>FieldFill.UPDATE：当更新时填充</p>\n<p>FieldFill.INSERT：当插入时填充</p>\n<p>根据SQL脚本和BaseModel的相关字段，我们可以发现并没有对各个时间字段进行特殊处理，这里是有一个专门的【自动填充控制器】来操作的；</p>\n<h5 id=\"4、自定义填充控制器\"><a href=\"#4、自定义填充控制器\" class=\"headerlink\" title=\"4、自定义填充控制器\"></a>4、自定义填充控制器</h5><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MybatisPlusMetaObjectHandler</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">MetaObjectHandler</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">insertFill</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MetaObject</span> metaObject<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">Date</span> now <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 注意此处字段名称需要使用驼峰</span>\n        <span class=\"token class-name\">Object</span> createdAt <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getFieldValByName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"createTime\"</span><span class=\"token punctuation\">,</span> metaObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">==</span> createdAt<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setFieldValByName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"createTime\"</span><span class=\"token punctuation\">,</span> now<span class=\"token punctuation\">,</span> metaObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token class-name\">Object</span> updatedAt <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getFieldValByName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"updateTime\"</span><span class=\"token punctuation\">,</span> metaObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">==</span> updatedAt<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setFieldValByName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"updateTime\"</span><span class=\"token punctuation\">,</span> now<span class=\"token punctuation\">,</span> metaObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token class-name\">Object</span> version <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getFieldValByName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"version\"</span><span class=\"token punctuation\">,</span> metaObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">==</span> version<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setFieldValByName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"version\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0L</span><span class=\"token punctuation\">,</span> metaObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">updateFill</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MetaObject</span> metaObject<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n        <span class=\"token class-name\">Object</span> updatedAt <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getFieldValByName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"updateTime\"</span><span class=\"token punctuation\">,</span> metaObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">==</span> updatedAt<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setFieldValByName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"updateTime\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> metaObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token class-name\">Object</span> version <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getFieldValByName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"version\"</span><span class=\"token punctuation\">,</span> metaObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">==</span> version<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setFieldValByName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"version\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0L</span><span class=\"token punctuation\">,</span> metaObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>到了这一步，逻辑删除时并不能对新增的 delete_time 字段设置当前的时间，还不符合我们的需求，所以我们需要改写一下SQL注入的逻辑；即：逻辑删除的时候，将 delete_time 设置为当前时间戳。</p>\n<h5 id=\"5、自定义SQL注入器\"><a href=\"#5、自定义SQL注入器\" class=\"headerlink\" title=\"5、自定义SQL注入器\"></a>5、自定义SQL注入器</h5><p>1、自定义逻辑删除，单个删除</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LogicDeleteById</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AbstractMethod</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token comment\">/**\n     * mapper 对应的方法名\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> MAPPER_METHOD <span class=\"token operator\">=</span> <span class=\"token string\">\"logicDeleteById\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">MappedStatement</span> <span class=\"token function\">injectMappedStatement</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> mapperClass<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> modelClass<span class=\"token punctuation\">,</span> <span class=\"token class-name\">TableInfo</span> tableInfo<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">String</span> sql<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">SqlMethod</span> sqlMethod <span class=\"token operator\">=</span> <span class=\"token class-name\">SqlMethod</span><span class=\"token punctuation\">.</span>LOGIC_DELETE_BY_ID<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tableInfo<span class=\"token punctuation\">.</span><span class=\"token function\">isLogicDelete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TableFieldInfo</span><span class=\"token punctuation\">></span></span> fieldInfos <span class=\"token operator\">=</span> tableInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getFieldList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">-></span> i<span class=\"token punctuation\">.</span><span class=\"token function\">getFieldFill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token class-name\">FieldFill</span><span class=\"token punctuation\">.</span>UPDATE <span class=\"token operator\">||</span> i<span class=\"token punctuation\">.</span><span class=\"token function\">getFieldFill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token class-name\">FieldFill</span><span class=\"token punctuation\">.</span>INSERT_UPDATE<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">CollectionUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNotEmpty</span><span class=\"token punctuation\">(</span>fieldInfos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token class-name\">String</span> sqlSet <span class=\"token operator\">=</span> <span class=\"token string\">\"SET \"</span> <span class=\"token operator\">+</span> fieldInfos<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">-></span> i<span class=\"token punctuation\">.</span><span class=\"token function\">getSqlSet</span><span class=\"token punctuation\">(</span>EMPTY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token function\">joining</span><span class=\"token punctuation\">(</span>EMPTY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token operator\">+</span> tableInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getLogicDeleteSql</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token operator\">+</span> <span class=\"token string\">\",delete_time = NOW()\"</span><span class=\"token punctuation\">;</span>\n                sql <span class=\"token operator\">=</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>sqlMethod<span class=\"token punctuation\">.</span><span class=\"token function\">getSql</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> tableInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getTableName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> sqlSet<span class=\"token punctuation\">,</span> tableInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getKeyColumn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        tableInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getKeyProperty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> tableInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getLogicDeleteSql</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n                sql <span class=\"token operator\">=</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>sqlMethod<span class=\"token punctuation\">.</span><span class=\"token function\">getSql</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> tableInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getTableName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">sqlLogicSet</span><span class=\"token punctuation\">(</span>tableInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        tableInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getKeyColumn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> tableInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getKeyProperty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        tableInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getLogicDeleteSql</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            sqlMethod <span class=\"token operator\">=</span> <span class=\"token class-name\">SqlMethod</span><span class=\"token punctuation\">.</span>DELETE_BY_ID<span class=\"token punctuation\">;</span>\n            sql <span class=\"token operator\">=</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>sqlMethod<span class=\"token punctuation\">.</span><span class=\"token function\">getSql</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> tableInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getTableName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> tableInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getKeyColumn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    tableInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getKeyProperty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token class-name\">SqlSource</span> sqlSource <span class=\"token operator\">=</span> languageDriver<span class=\"token punctuation\">.</span><span class=\"token function\">createSqlSource</span><span class=\"token punctuation\">(</span>configuration<span class=\"token punctuation\">,</span> sql<span class=\"token punctuation\">,</span> modelClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">addUpdateMappedStatement</span><span class=\"token punctuation\">(</span>mapperClass<span class=\"token punctuation\">,</span> modelClass<span class=\"token punctuation\">,</span> MAPPER_METHOD<span class=\"token punctuation\">,</span> sqlSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>2、自定义批量逻辑删除</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LogicDeleteBatch</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AbstractMethod</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token comment\">/**\n     * mapper 对应的方法名\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> MAPPER_METHOD <span class=\"token operator\">=</span> <span class=\"token string\">\"logicDeleteBatch\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">MappedStatement</span> <span class=\"token function\">injectMappedStatement</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> mapperClass<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> modelClass<span class=\"token punctuation\">,</span> <span class=\"token class-name\">TableInfo</span> tableInfo<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">String</span> sql<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tableInfo<span class=\"token punctuation\">.</span><span class=\"token function\">isLogicDelete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">String</span> logicDeleteSql <span class=\"token operator\">=</span> <span class=\"token string\">\"&lt;script>\\nUPDATE %s %s %s\\n&lt;/script>\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TableFieldInfo</span><span class=\"token punctuation\">></span></span> fieldInfos <span class=\"token operator\">=</span> tableInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getFieldList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">-></span> i<span class=\"token punctuation\">.</span><span class=\"token function\">getFieldFill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token class-name\">FieldFill</span><span class=\"token punctuation\">.</span>UPDATE <span class=\"token operator\">||</span> i<span class=\"token punctuation\">.</span><span class=\"token function\">getFieldFill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token class-name\">FieldFill</span><span class=\"token punctuation\">.</span>INSERT_UPDATE<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">CollectionUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNotEmpty</span><span class=\"token punctuation\">(</span>fieldInfos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token class-name\">String</span> sqlSet <span class=\"token operator\">=</span> <span class=\"token string\">\"SET \"</span> <span class=\"token operator\">+</span> fieldInfos<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">-></span> i<span class=\"token punctuation\">.</span><span class=\"token function\">getSqlSet</span><span class=\"token punctuation\">(</span>ENTITY_DOT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token function\">joining</span><span class=\"token punctuation\">(</span>EMPTY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token operator\">+</span> tableInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getLogicDeleteSql</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token operator\">+</span> <span class=\"token string\">\",delete_time = NOW()\"</span><span class=\"token punctuation\">;</span>\n                sql <span class=\"token operator\">=</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>logicDeleteSql<span class=\"token punctuation\">,</span> tableInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getTableName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> sqlSet<span class=\"token punctuation\">,</span>\n                        <span class=\"token function\">sqlWhereEntityWrapper</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> tableInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n                sql <span class=\"token operator\">=</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>logicDeleteSql<span class=\"token punctuation\">,</span> tableInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getTableName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">sqlLogicSet</span><span class=\"token punctuation\">(</span>tableInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token function\">sqlWhereEntityWrapper</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> tableInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token class-name\">SqlSource</span> sqlSource <span class=\"token operator\">=</span> languageDriver<span class=\"token punctuation\">.</span><span class=\"token function\">createSqlSource</span><span class=\"token punctuation\">(</span>configuration<span class=\"token punctuation\">,</span> sql<span class=\"token punctuation\">,</span> modelClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">addUpdateMappedStatement</span><span class=\"token punctuation\">(</span>mapperClass<span class=\"token punctuation\">,</span> modelClass<span class=\"token punctuation\">,</span> MAPPER_METHOD<span class=\"token punctuation\">,</span> sqlSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">String</span> deleteSql <span class=\"token operator\">=</span> <span class=\"token string\">\"&lt;script>\\nDELETE FROM %s %s\\n&lt;/script>\"</span><span class=\"token punctuation\">;</span>\n            sql <span class=\"token operator\">=</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>deleteSql<span class=\"token punctuation\">,</span> tableInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getTableName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">sqlWhereEntityWrapper</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> tableInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">SqlSource</span> sqlSource <span class=\"token operator\">=</span> languageDriver<span class=\"token punctuation\">.</span><span class=\"token function\">createSqlSource</span><span class=\"token punctuation\">(</span>configuration<span class=\"token punctuation\">,</span> sql<span class=\"token punctuation\">,</span> modelClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">addDeleteMappedStatement</span><span class=\"token punctuation\">(</span>mapperClass<span class=\"token punctuation\">,</span> MAPPER_METHOD<span class=\"token punctuation\">,</span> sqlSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>3、自定义SQL注入器</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MybatisPlusSqlInjector</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">DefaultSqlInjector</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">AbstractMethod</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getMethodList</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> mapperClass<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 拿到父类的getMethodList方法</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">AbstractMethod</span><span class=\"token punctuation\">></span></span> methodList <span class=\"token operator\">=</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">getMethodList</span><span class=\"token punctuation\">(</span>mapperClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 根据id删除并自动填充 LogicDeleteById</span>\n        methodList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">LogicDeleteById</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        methodList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">LogicDeleteBatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> methodList<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>4、在baseMapper里面声明这两个方法，使用过程中就可以直接在其他mapper中调用这两个自定义方法了：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IBaseMapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseMapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">/**\n     * 逻辑删除\n     *\n     * @param entity\n     * @return\n     */</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">logicDeleteById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">T</span> entity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * 批量逻辑删除\n     *\n     * @param entity\n     * @param wrapper\n     * @return\n     */</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">logicDeleteBatch</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Constants</span><span class=\"token punctuation\">.</span>ENTITY<span class=\"token punctuation\">)</span> <span class=\"token class-name\">T</span> entity<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Constants</span><span class=\"token punctuation\">.</span>WRAPPER<span class=\"token punctuation\">)</span> <span class=\"token class-name\">Wrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> wrapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h5 id=\"6、集成到service层\"><a href=\"#6、集成到service层\" class=\"headerlink\" title=\"6、集成到service层\"></a>6、集成到service层</h5><p>1、接口</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IBaseService</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IService</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">/**\n     * 逻辑删除\n     *\n     * @param entity\n     * @return\n     */</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">logicDeleteById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">T</span> entity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * 批量逻辑删除\n     *\n     * @param entity\n     * @param wrapper\n     * @return\n     */</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">logicDeleteBatch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">T</span> entity<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Wrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> wrapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>2、实现类，记得要继承ServiceImpl&lt;M, T&gt;，不然要写很多相同的代码</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">IBaseServiceImpl</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">M</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IBaseMapper</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ServiceImpl</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">M</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">IBaseService</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token class-name\">M</span> baseMapper<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">M</span> <span class=\"token function\">getBaseMapper</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> baseMapper<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">logicDeleteById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">T</span> entity<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> baseMapper<span class=\"token punctuation\">.</span><span class=\"token function\">logicDeleteById</span><span class=\"token punctuation\">(</span>entity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">logicDeleteBatch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">T</span> entity<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Wrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> wrapper<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> baseMapper<span class=\"token punctuation\">.</span><span class=\"token function\">logicDeleteBatch</span><span class=\"token punctuation\">(</span>entity<span class=\"token punctuation\">,</span> wrapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"3、至此，就可以在service层进行直接调用了，自从用了mybatis-plus，就远离了mapper-xml\"><a href=\"#3、至此，就可以在service层进行直接调用了，自从用了mybatis-plus，就远离了mapper-xml\" class=\"headerlink\" title=\"3、至此，就可以在service层进行直接调用了，自从用了mybatis plus，就远离了mapper.xml\"></a>3、至此，就可以在service层进行直接调用了，自从用了mybatis plus，就远离了mapper.xml</h2>","feature":true,"text":" 1、背景开发规范里面要求有 delte_time 字段，但是baomidou的Mybatis plus里面没有这个字段；理论上也是不需要这个字段的，毕竟逻辑删除 与 update_time 配合起来就是 delte_time 的含义了；所以我们需要来研究一下 如何增加这个字段，...","link":"","photos":[],"count_time":{"symbolsCount":"9.1k","symbolsTime":"8 mins."},"categories":[{"name":"Java","slug":"Java","count":1,"path":"api/categories/Java.json"}],"tags":[{"name":"Mybatis Plus","slug":"Mybatis-Plus","count":1,"path":"api/tags/Mybatis-Plus.json"},{"name":"SQL","slug":"SQL","count":1,"path":"api/tags/SQL.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1%E3%80%81%E8%83%8C%E6%99%AF\"><span class=\"toc-text\">1、背景</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2%E3%80%81%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83\"><span class=\"toc-text\">2、开发环境</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3%E3%80%81%E9%80%9A%E7%94%A8%E5%AD%97%E6%AE%B5\"><span class=\"toc-text\">3、通用字段</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#4%E3%80%81%E8%87%AA%E5%AE%9A%E4%B9%89%E5%A1%AB%E5%85%85%E6%8E%A7%E5%88%B6%E5%99%A8\"><span class=\"toc-text\">4、自定义填充控制器</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#5%E3%80%81%E8%87%AA%E5%AE%9A%E4%B9%89SQL%E6%B3%A8%E5%85%A5%E5%99%A8\"><span class=\"toc-text\">5、自定义SQL注入器</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#6%E3%80%81%E9%9B%86%E6%88%90%E5%88%B0service%E5%B1%82\"><span class=\"toc-text\">6、集成到service层</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3%E3%80%81%E8%87%B3%E6%AD%A4%EF%BC%8C%E5%B0%B1%E5%8F%AF%E4%BB%A5%E5%9C%A8service%E5%B1%82%E8%BF%9B%E8%A1%8C%E7%9B%B4%E6%8E%A5%E8%B0%83%E7%94%A8%E4%BA%86%EF%BC%8C%E8%87%AA%E4%BB%8E%E7%94%A8%E4%BA%86mybatis-plus%EF%BC%8C%E5%B0%B1%E8%BF%9C%E7%A6%BB%E4%BA%86mapper-xml\"><span class=\"toc-text\">3、至此，就可以在service层进行直接调用了，自从用了mybatis plus，就远离了mapper.xml</span></a>","author":{"name":"ilobos","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/ilobos/","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/ilobos/"}}}},"mapped":true,"prev_post":{},"next_post":{"title":"Windows移除快捷方式的小图标","uid":"15d0f173b74c265bd5670b5b383beb4a","slug":"win/001-remove-shortcut-flag","date":"2022-03-30T01:20:13.000Z","updated":"2022-03-30T01:57:44.194Z","comments":true,"path":"api/articles/win/001-remove-shortcut-flag.json","keywords":null,"cover":"https://images.pexels.com/photos/290470/pexels-photo-290470.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260","text":" 1、打开注册表a、Windows图标 + R b、输入 regedit 打开注册表编辑程序 2、删除IsShortcuta、依次展开 HKEY_CLASSES_ROOT\\lnkfile ， 也可以直接搜索 b、找到并右键删除 IsShortcut 3、重启资源管理器a、在任务栏...","link":"","photos":[],"count_time":{"symbolsCount":253,"symbolsTime":"1 mins."},"categories":[{"name":"Windows","slug":"Windows","count":1,"path":"api/categories/Windows.json"}],"tags":[{"name":"shortcut","slug":"shortcut","count":1,"path":"api/tags/shortcut.json"}],"author":{"name":"ilobos","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/ilobos/","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/ilobos/"}}}},"feature":true}}